Git Commands:
git log -a //显示所有日志
/*对于错误add 还未commit*/
git rm <-r, recursive>--cached "文件路径"，不删除物理文件，仅将该文件从缓存中删除；
git rm --f  "文件路径"，不仅将该文件从缓存中删除，还会将物理文件删除（不会回收到垃圾桶）。
/* 对于错误commit，还未push */
1. git reset soft HEAD~1 //回滚到上一次commit，此时上一次add还未撤销
2. git reset --mixed //撤销上次add，随后可以重新add && commit then push
/* 修改和查看远程仓库地址 */
git remote -v
git remote set-url origin <remote url>



ubuntu操作：
添加环境变量：
	1. vim ~/.bashrc 
	2. 在文件末尾添加路径： example: export PATH=~/dependency/kenlm/build/bin:$PATH
	3. source ~/.bashrc //加载一下
	4. 查看已添加环境变量，使用“：”隔开：echo $PATH 
寻找文件地址：which <filename>
打印pip包路径：pip2 show <package name>
查看用户：sudo cat /etc/shadow
npm项目忽略module push到github:
1. vim .gitignore //创建用于忽略某些文件的文件
2. 写入要忽略的文件，如：node_modules/
3. git add . $ git commit -m "xxx" & git push

操作远程ssh终端：
source activate <env name> //激活某python环境
cat /usr/local/cuda/version.txt //查看CUDA版本

Win Commands:
将test1中文件夹复制到test2中： xcopy d:\test1  d:\test2 /T /E
批量转文件后缀： @echo off
	        for /d %%i in (D:\Projects\funcs_comments_v11122020_backup\*) do ( 
                  cd %%i 
                  ren *.txt *.sol
                 )
查看当前文件夹下全部文件： dir /a *
删除某个文件： del <file name>

pytorch 查看cuda, cudnn版本:
	import torch
	print(torch.__version__)

	print(torch.version.cuda)
	print(torch.backends.cudnn.version())

